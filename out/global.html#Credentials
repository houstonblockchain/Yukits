<!DOCTYPE html>
<html lang="en">
<head>

  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <title>
      Credentials - Documentation
  </title>

  <link href="https://www.braintreepayments.com/images/favicon-ccda0b14.png" rel="icon" type="image/png">

  <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.7.0/highlight.min.js"></script>
  <script>hljs.initHighlightingOnLoad();</script>

  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>

  <link type="text/css" rel="stylesheet" href="styles/prettify-tomorrow.css">
  <link type="text/css" rel="stylesheet" href="styles/jsdoc-default.css">

  

  <!-- start Mixpanel -->
  <script type="text/javascript">(function(e,a){if(!a.__SV){var b=window;try{var c,l,i,j=b.location,g=j.hash;c=function(a,b){return(l=a.match(RegExp(b+"=([^&]*)")))?l[1]:null};g&&c(g,"state")&&(i=JSON.parse(decodeURIComponent(c(g,"state"))),"mpeditor"===i.action&&(b.sessionStorage.setItem("_mpcehash",g),history.replaceState(i.desiredHash||"",e.title,j.pathname+j.search)))}catch(m){}var k,h;window.mixpanel=a;a._i=[];a.init=function(b,c,f){function e(b,a){var c=a.split(".");2==c.length&&(b=b[c[0]],a=c[1]);b[a]=function(){b.push([a].concat(Array.prototype.slice.call(arguments,
  0)))}}var d=a;"undefined"!==typeof f?d=a[f]=[]:f="mixpanel";d.people=d.people||[];d.toString=function(b){var a="mixpanel";"mixpanel"!==f&&(a+="."+f);b||(a+=" (stub)");return a};d.people.toString=function(){return d.toString(1)+".people (stub)"};k="disable time_event track track_pageview track_links track_forms register register_once alias unregister identify name_tag set_config reset people.set people.set_once people.increment people.append people.union people.track_charge people.clear_charges people.delete_user".split(" ");
  for(h=0;h<k.length;h++)e(d,k[h]);a._i.push([b,c,f])};a.__SV=1.2;b=e.createElement("script");b.type="text/javascript";b.async=!0;b.src="undefined"!==typeof MIXPANEL_CUSTOM_LIB_URL?MIXPANEL_CUSTOM_LIB_URL:"file:"===e.location.protocol&&"//cdn.mxpnl.com/libs/mixpanel-2-latest.min.js".match(/^\/\//)?"https://cdn.mxpnl.com/libs/mixpanel-2-latest.min.js":"//cdn.mxpnl.com/libs/mixpanel-2-latest.min.js";c=e.getElementsByTagName("script")[0];c.parentNode.insertBefore(b,c)}})(document,window.mixpanel||[]);
  mixpanel.init("1919205b2da72e4da3b9b6639b444d59");</script>
  <!-- end Mixpanel -->
</head>

<body>
  <svg style="display: none;">
    <defs>
      <symbol id="linkIcon" fill="#706d77" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
          <path d="M0 0h24v24H0z" fill="none"/>
          <path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"/>
      </symbol>
    </defs>
  </svg>

  <input type="checkbox" id="nav-trigger" class="nav-trigger" />
  <label for="nav-trigger" class="navicon-button x">
    <div class="navicon"></div>
  </label>

  <label for="nav-trigger" class="overlay"></label>

  <div class="top-nav-wrapper">
    <ul>
      <li >
        <a href="index.html">
          
            <svg fill="#6D6D6D" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
              <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>
              <path d="M0 0h24v24H0z" fill="none"/>
            </svg>
          
          
        </a>
      </li>

      

    </ul>
  </div>

  <nav>
    <h3 class="reference-title">
      African Menu
    </h3>

    <h3>Classes</h3><ul><li id="Credentials-nav"><a href="global.html#Credentials">Credentials</a><ul class='methods'><li data-type="method" id="Credentials-attest-nav"><a href="global.html#Credentials#attest">attest</a></li><li data-type="method" id="Credentials-createRequest-nav"><a href="global.html#Credentials#createRequest">createRequest</a></li><li data-type="method" id="Credentials-lookup-nav"><a href="global.html#Credentials#lookup">lookup</a></li><li data-type="method" id="Credentials-push-nav"><a href="global.html#Credentials#push">push</a></li><li data-type="method" id="Credentials-receive-nav"><a href="global.html#Credentials#receive">receive</a></li></ul></li></ul><h3>Modules</h3><ul><li id="uport-js_JWT-nav"><a href="module-uport-js_JWT.html">uport-js/JWT</a><ul class='methods'><li data-type="method" id="uport-js_JWT-createJWT-nav"><a href="module-uport-js_JWT.html#.createJWT">createJWT</a></li><li data-type="method" id="uport-js_JWT-verifyJWT-nav"><a href="module-uport-js_JWT.html#.verifyJWT">verifyJWT</a></li><li data-type="method" id="uport-js_JWT-check if string is hex string of specific length-nav"><a href="module-uport-js_JWT.html#~checkifstringishexstringofspecificlength">check if string is hex string of specific length</a></li><li data-type="method" id="uport-js_JWT-createJWT-nav"><a href="module-uport-js_JWT.html#~createJWT">createJWT</a></li><li data-type="method" id="uport-js_JWT-fromAscii-nav"><a href="module-uport-js_JWT.html#~fromAscii">fromAscii</a></li><li data-type="method" id="uport-js_JWT-fromUtf8-nav"><a href="module-uport-js_JWT.html#~fromUtf8">fromUtf8</a></li><li data-type="method" id="uport-js_JWT-getKeys get specific key from inner object array of objects-nav"><a href="module-uport-js_JWT.html#~getKeysgetspecifickeyfrominnerobjectarrayofobjects">getKeys get specific key from inner object array of objects</a></li><li data-type="method" id="uport-js_JWT-toAscii-nav"><a href="module-uport-js_JWT.html#~toAscii">toAscii</a></li><li data-type="method" id="uport-js_JWT-toUtf8-nav"><a href="module-uport-js_JWT.html#~toUtf8">toUtf8</a></li><li data-type="method" id="uport-js_JWT-verifyJWT-nav"><a href="module-uport-js_JWT.html#~verifyJWT">verifyJWT</a></li></ul></li></ul><h3 id="global-nav">Global</h3><ul><li><a href="global.html#encryptMessage">encryptMessage</a></li><li><a href="global.html#padMessage">padMessage</a></li><li><a href="global.html#SimpleSigner">SimpleSigner</a></li></ul>
  </nav>

  <div id="main">
    
      <h1 class="page-title">
        Credentials
      </h1>
    

    

<section>
  <header>
    
      <h2>
        
        Credentials
        
      </h2>

      
        <div class="class-description">
          The Credentials class allows you to easily create the signed payloads used in uPort inlcuding
   credentials and signed mobile app requests (ex. selective disclosure requests
   for private data). It also provides signature verification over signed payloads and
   allows you to send push notifications to users.
        </div>
      
    
  </header>

  <article>
    <div class="container-overview">
      
        


  
    <h2>Constructor</h2>
  

  <span class='name-container'>
    <a class="link-icon" href="#Credentials">
      <svg height="20" width="20" style="fill: black;">
        <use xlink:href="#linkIcon"></use>
      </svg>
    </a>
    <h4 class="name" id="Credentials">
      <span class="type-signature"></span>new Credentials<span class="signature">(settings<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span>
    </h4>
  </span>

  



  <div class="description">
    Instantiates a new uPort Credentials object
  </div>







  <h5>Parameters:</h5>
  

<table class="params">
  <thead>
    <tr>
      
        <th>Name</th>
      

      <th>Type</th>

      
        <th>Attributes</th>
      

      

      <th class="last">Description</th>
    </tr>
  </thead>

  <tbody>
    
      <tr>
        
          <td class="name"><code>settings</code></td>
        

        <td class="type">
          
            
    <span class="param-type">
      Object
    </span>

    


          
        </td>

        
          <td class="attributes">
            
              &lt;optional><br>
            

            

            
          </td>
        

        

        <td class="description last">
          setttings
          
            <h6>Properties</h6>
            

<table class="params">
  <thead>
    <tr>
      
        <th>Name</th>
      

      <th>Type</th>

      

      

      <th class="last">Description</th>
    </tr>
  </thead>

  <tbody>
    
      <tr>
        
          <td class="name"><code>networks</code></td>
        

        <td class="type">
          
            
    <span class="param-type">
      Object
    </span>

    


          
        </td>

        

        

        <td class="description last">
          networks config object, ie. {  '0x94365e3b': { rpcUrl: 'https://private.chain/rpc', address: '0x0101.... }}
          
        </td>
      </tr>

    
      <tr>
        
          <td class="name"><code>registry</code></td>
        

        <td class="type">
          
            
    <span class="param-type">
      UportLite
    </span>

    


          
        </td>

        

        

        <td class="description last">
          a registry object from UportLite
          
        </td>
      </tr>

    
      <tr>
        
          <td class="name"><code>signer</code></td>
        

        <td class="type">
          
            
    <span class="param-type">
      <a href="global.html#SimpleSigner">SimpleSigner</a>
    </span>

    


          
        </td>

        

        

        <td class="description last">
          a signer object, see SimpleSigner.js
          
        </td>
      </tr>

    
      <tr>
        
          <td class="name"><code>address</code></td>
        

        <td class="type">
          
            
    <span class="param-type">
      Address
    </span>

    


          
        </td>

        

        

        <td class="description last">
          your uPort address (may be the address of your application's uPort identity)
          
        </td>
      </tr>

    
  </tbody>
</table>

          
        </td>
      </tr>

    
  </tbody>
</table>





<dl class="details">

  

  

  

  

  

  

  

  

  

  

  

  

  
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source">
      <ul class="dummy">
        <li>
          <a href="src_Credentials.js.html">src/Credentials.js</a>, <a href="src_Credentials.js.html#line14">line 14</a>
        </li>
      </ul>
    </dd>
  

  

  

  
</dl>














      
    </div>

    

    

    

     

    

    

    
      <h3 class="subsection-title">Methods</h3>

      
        


  

  <span class='name-container'>
    <a class="link-icon" href="#attest">
      <svg height="20" width="20" style="fill: black;">
        <use xlink:href="#linkIcon"></use>
      </svg>
    </a>
    <h4 class="name" id="attest">
      <span class="type-signature"></span>attest<span class="signature">(credential<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;Object, Error>}</span>
    </h4>
  </span>

  



  <div class="description">
    Create a credential (a signed JSON Web Token)
  </div>







  <h5>Parameters:</h5>
  

<table class="params">
  <thead>
    <tr>
      
        <th>Name</th>
      

      <th>Type</th>

      
        <th>Attributes</th>
      

      

      <th class="last">Description</th>
    </tr>
  </thead>

  <tbody>
    
      <tr>
        
          <td class="name"><code>credential</code></td>
        

        <td class="type">
          
            
    <span class="param-type">
      Object
    </span>

    


          
        </td>

        
          <td class="attributes">
            
              &lt;optional><br>
            

            

            
          </td>
        

        

        <td class="description last">
          a unsigned credential object
          
            <h6>Properties</h6>
            

<table class="params">
  <thead>
    <tr>
      
        <th>Name</th>
      

      <th>Type</th>

      

      

      <th class="last">Description</th>
    </tr>
  </thead>

  <tbody>
    
      <tr>
        
          <td class="name"><code>sub</code></td>
        

        <td class="type">
          
            
    <span class="param-type">
      String
    </span>

    


          
        </td>

        

        

        <td class="description last">
          subject of credential (a uPort address)
          
        </td>
      </tr>

    
      <tr>
        
          <td class="name"><code>claim</code></td>
        

        <td class="type">
          
            
    <span class="param-type">
      String
    </span>

    


          
        </td>

        

        

        <td class="description last">
          claim about subject single key value or key mapping to object with multiple values (ie { address: {street: ..., zip: ..., country: ...}})
          
        </td>
      </tr>

    
      <tr>
        
          <td class="name"><code>exp</code></td>
        

        <td class="type">
          
            
    <span class="param-type">
      String
    </span>

    


          
        </td>

        

        

        <td class="description last">
          time at which this claim expires and is no longer valid (seconds since epoch)
          
        </td>
      </tr>

    
  </tbody>
</table>

          
        </td>
      </tr>

    
  </tbody>
</table>





<dl class="details">

  

  

  

  

  

  

  

  

  

  

  

  

  
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source">
      <ul class="dummy">
        <li>
          <a href="src_Credentials.js.html">src/Credentials.js</a>, <a href="src_Credentials.js.html#line230">line 230</a>
        </li>
      </ul>
    </dd>
  

  

  

  
</dl>













  <div class="example-container">
    <a class="link-icon" href="#attest-examples">
      <svg height="20" width="20" style="fill: black;">
        <use xlink:href="#linkIcon"></use>
      </svg>
    </a>
    <h5 id="attest-examples">Example</h5>
    

  <pre class="prettyprint"><code>credentials.attest({
  sub: '5A8bRWU3F7j3REx3vkJ...', // uPort address of user, likely a MNID
  exp: &lt;future timestamp>,
  claim: { name: 'John Smith' }
 }).then( credential => {
  ...
 })</code></pre>


  </div>


      
        


  

  <span class='name-container'>
    <a class="link-icon" href="#createRequest">
      <svg height="20" width="20" style="fill: black;">
        <use xlink:href="#linkIcon"></use>
      </svg>
    </a>
    <h4 class="name" id="createRequest">
      <span class="type-signature"></span>createRequest<span class="signature">(params<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;Object, Error>}</span>
    </h4>
  </span>

  



  <div class="description">
    Creates a signed request token (JWT) given a request params object.
  </div>







  <h5>Parameters:</h5>
  

<table class="params">
  <thead>
    <tr>
      
        <th>Name</th>
      

      <th>Type</th>

      
        <th>Attributes</th>
      

      
        <th>Default</th>
      

      <th class="last">Description</th>
    </tr>
  </thead>

  <tbody>
    
      <tr>
        
          <td class="name"><code>params</code></td>
        

        <td class="type">
          
            
    <span class="param-type">
      Object
    </span>

    


          
        </td>

        
          <td class="attributes">
            
              &lt;optional><br>
            

            

            
          </td>
        

        
          <td class="default">
            
              {}
            
          </td>
        

        <td class="description last">
          request params object
          
            <h6>Properties</h6>
            

<table class="params">
  <thead>
    <tr>
      
        <th>Name</th>
      

      <th>Type</th>

      

      

      <th class="last">Description</th>
    </tr>
  </thead>

  <tbody>
    
      <tr>
        
          <td class="name"><code>requested</code></td>
        

        <td class="type">
          
            
    <span class="param-type">
      Array
    </span>

    


          
        </td>

        

        

        <td class="description last">
          an array of attributes for which you are requesting credentials to be shared for
          
        </td>
      </tr>

    
      <tr>
        
          <td class="name"><code>verified</code></td>
        

        <td class="type">
          
            
    <span class="param-type">
      Array
    </span>

    


          
        </td>

        

        

        <td class="description last">
          an array of attributes for which you are requesting verified credentials to be shared for
          
        </td>
      </tr>

    
      <tr>
        
          <td class="name"><code>notifications</code></td>
        

        <td class="type">
          
            
    <span class="param-type">
      Boolean
    </span>

    


          
        </td>

        

        

        <td class="description last">
          boolean if you want to request the ability to send push notifications
          
        </td>
      </tr>

    
      <tr>
        
          <td class="name"><code>callbackUrl</code></td>
        

        <td class="type">
          
            
    <span class="param-type">
      String
    </span>

    


          
        </td>

        

        

        <td class="description last">
          the url which you want to receive the response of this request
          
        </td>
      </tr>

    
      <tr>
        
          <td class="name"><code>network_id</code></td>
        

        <td class="type">
          
            
    <span class="param-type">
      String
    </span>

    


          
        </td>

        

        

        <td class="description last">
          network id of Ethereum chain of identity eg. 0x4 for rinkeby
          
        </td>
      </tr>

    
      <tr>
        
          <td class="name"><code>accountType</code></td>
        

        <td class="type">
          
            
    <span class="param-type">
      String
    </span>

    


          
        </td>

        

        

        <td class="description last">
          Ethereum account type: "general", "segregated", "keypair", "devicekey" or "none"
          
        </td>
      </tr>

    
  </tbody>
</table>

          
        </td>
      </tr>

    
  </tbody>
</table>





<dl class="details">

  

  

  

  

  

  

  

  

  

  

  

  

  
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source">
      <ul class="dummy">
        <li>
          <a href="src_Credentials.js.html">src/Credentials.js</a>, <a href="src_Credentials.js.html#line76">line 76</a>
        </li>
      </ul>
    </dd>
  

  

  

  
</dl>













  <div class="example-container">
    <a class="link-icon" href="#createRequest-examples">
      <svg height="20" width="20" style="fill: black;">
        <use xlink:href="#linkIcon"></use>
      </svg>
    </a>
    <h5 id="createRequest-examples">Example</h5>
    

  <pre class="prettyprint"><code>const req = { requested: ['name', 'country'],
               callbackUrl: 'https://myserver.com',
               notifications: true }
 credentials.createRequest(req).then(jwt => {
     ...
 })


 requested: ['name','phone','identity_no'],
    callbackUrl: 'https://....' // URL to send the response of the request to
    notifications: true

 </code></pre>


  </div>


      
        


  

  <span class='name-container'>
    <a class="link-icon" href="#lookup">
      <svg height="20" width="20" style="fill: black;">
        <use xlink:href="#linkIcon"></use>
      </svg>
    </a>
    <h4 class="name" id="lookup">
      <span class="type-signature"></span>lookup<span class="signature">(address)</span><span class="type-signature"> &rarr; {Promise.&lt;Object, Error>}</span>
    </h4>
  </span>

  



  <div class="description">
    Look up a profile in the registry for a given uPort address. Address must be MNID encoded.
  </div>







  <h5>Parameters:</h5>
  

<table class="params">
  <thead>
    <tr>
      
        <th>Name</th>
      

      <th>Type</th>

      

      

      <th class="last">Description</th>
    </tr>
  </thead>

  <tbody>
    
      <tr>
        
          <td class="name"><code>address</code></td>
        

        <td class="type">
          
            
    <span class="param-type">
      String
    </span>

    


          
        </td>

        

        

        <td class="description last">
          a MNID encoded address
          
        </td>
      </tr>

    
  </tbody>
</table>





<dl class="details">

  

  

  

  

  

  

  

  

  

  

  

  

  
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source">
      <ul class="dummy">
        <li>
          <a href="src_Credentials.js.html">src/Credentials.js</a>, <a href="src_Credentials.js.html#line247">line 247</a>
        </li>
      </ul>
    </dd>
  

  

  

  
</dl>













  <div class="example-container">
    <a class="link-icon" href="#lookup-examples">
      <svg height="20" width="20" style="fill: black;">
        <use xlink:href="#linkIcon"></use>
      </svg>
    </a>
    <h5 id="lookup-examples">Example</h5>
    

  <pre class="prettyprint"><code>credentials.lookup('5A8bRWU3F7j3REx3vkJ...').then(profile => {
    const name = profile.name
    const pubkey = profile.pubkey
    ...
  })</code></pre>


  </div>


      
        


  

  <span class='name-container'>
    <a class="link-icon" href="#push">
      <svg height="20" width="20" style="fill: black;">
        <use xlink:href="#linkIcon"></use>
      </svg>
    </a>
    <h4 class="name" id="push">
      <span class="type-signature"></span>push<span class="signature">(token, payload, pubEncKey)</span><span class="type-signature"> &rarr; {Promise.&lt;Object, Error>}</span>
    </h4>
  </span>

  



  <div class="description">
    Send a push notification to a user, consumes a token which allows you to send push notifications
 and a url/uri request you want to send to the user.
  </div>







  <h5>Parameters:</h5>
  

<table class="params">
  <thead>
    <tr>
      
        <th>Name</th>
      

      <th>Type</th>

      

      

      <th class="last">Description</th>
    </tr>
  </thead>

  <tbody>
    
      <tr>
        
          <td class="name"><code>token</code></td>
        

        <td class="type">
          
            
    <span class="param-type">
      String
    </span>

    


          
        </td>

        

        

        <td class="description last">
          a push notification token (get a pn token by requesting push permissions in a request)
          
        </td>
      </tr>

    
      <tr>
        
          <td class="name"><code>payload</code></td>
        

        <td class="type">
          
            
    <span class="param-type">
      Object
    </span>

    


          
        </td>

        

        

        <td class="description last">
          push notification payload
          
            <h6>Properties</h6>
            

<table class="params">
  <thead>
    <tr>
      
        <th>Name</th>
      

      <th>Type</th>

      

      

      <th class="last">Description</th>
    </tr>
  </thead>

  <tbody>
    
      <tr>
        
          <td class="name"><code>url</code></td>
        

        <td class="type">
          
            
    <span class="param-type">
      String
    </span>

    


          
        </td>

        

        

        <td class="description last">
          a uport request url
          
        </td>
      </tr>

    
      <tr>
        
          <td class="name"><code>message</code></td>
        

        <td class="type">
          
            
    <span class="param-type">
      String
    </span>

    


          
        </td>

        

        

        <td class="description last">
          a message to display to the user
          
        </td>
      </tr>

    
  </tbody>
</table>

          
        </td>
      </tr>

    
      <tr>
        
          <td class="name"><code>pubEncKey</code></td>
        

        <td class="type">
          
            
    <span class="param-type">
      String
    </span>

    


          
        </td>

        

        

        <td class="description last">
          the public encryption key of the receiver, encoded as a base64 string
          
        </td>
      </tr>

    
  </tbody>
</table>





<dl class="details">

  

  

  

  

  

  

  

  

  

  

  

  

  
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source">
      <ul class="dummy">
        <li>
          <a href="src_Credentials.js.html">src/Credentials.js</a>, <a href="src_Credentials.js.html#line167">line 167</a>
        </li>
      </ul>
    </dd>
  

  

  

  
</dl>














      
        


  

  <span class='name-container'>
    <a class="link-icon" href="#receive">
      <svg height="20" width="20" style="fill: black;">
        <use xlink:href="#linkIcon"></use>
      </svg>
    </a>
    <h4 class="name" id="receive">
      <span class="type-signature"></span>receive<span class="signature">(token, callbackUrl<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Promise.&lt;Object, Error>}</span>
    </h4>
  </span>

  



  <div class="description">
    Receive signed response token from mobile app. Verifies and parses the given response token.
  </div>







  <h5>Parameters:</h5>
  

<table class="params">
  <thead>
    <tr>
      
        <th>Name</th>
      

      <th>Type</th>

      
        <th>Attributes</th>
      

      
        <th>Default</th>
      

      <th class="last">Description</th>
    </tr>
  </thead>

  <tbody>
    
      <tr>
        
          <td class="name"><code>token</code></td>
        

        <td class="type">
          
            
    <span class="param-type">
      String
    </span>

    


          
        </td>

        
          <td class="attributes">
            

            

            
          </td>
        

        
          <td class="default">
            
          </td>
        

        <td class="description last">
          a response token
          
        </td>
      </tr>

    
      <tr>
        
          <td class="name"><code>callbackUrl</code></td>
        

        <td class="type">
          
            
    <span class="param-type">
      String
    </span>

    


          
        </td>

        
          <td class="attributes">
            
              &lt;optional><br>
            

            

            
          </td>
        

        
          <td class="default">
            
              null
            
          </td>
        

        <td class="description last">
          callbackUrl
          
        </td>
      </tr>

    
  </tbody>
</table>





<dl class="details">

  

  

  

  

  

  

  

  

  

  

  

  

  
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source">
      <ul class="dummy">
        <li>
          <a href="src_Credentials.js.html">src/Credentials.js</a>, <a href="src_Credentials.js.html#line120">line 120</a>
        </li>
      </ul>
    </dd>
  

  

  

  
</dl>













  <div class="example-container">
    <a class="link-icon" href="#receive-examples">
      <svg height="20" width="20" style="fill: black;">
        <use xlink:href="#linkIcon"></use>
      </svg>
    </a>
    <h5 id="receive-examples">Example</h5>
    

  <pre class="prettyprint"><code>const resToken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJyZXF1Z....'
 credentials.receive(resToken).then(res => {
     const credentials = res.verified
         const name =  res.name
     ...
 })

 </code></pre>


  </div>


      
    

    

    
  </article>
</section>




  </div>

  <br class="clear">

  <footer>
    Documentation generated by <a href="https://github.com/jsdoc3/jsdoc">JSDoc 3.5.5</a>
  </footer>

  <script src="scripts/linenumber.js"></script>
  <script src="scripts/pagelocation.js"></script>

  
  
</body>
</html>